:py:mod:`whylogs.api.writer.mlflow`
===================================

.. py:module:: whylogs.api.writer.mlflow


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   whylogs.api.writer.mlflow.MlflowWriter




Attributes
~~~~~~~~~~

.. autoapisummary::

   whylogs.api.writer.mlflow.logger


.. py:data:: logger

   

.. py:class:: MlflowWriter

   Bases: :py:obj:`whylogs.api.writer.Writer`

   Helper class that provides a standard way to create an ABC using
   inheritance.

   .. py:method:: write(file: whylogs.api.writer.writer.Writable, dest: Optional[str] = None, **kwargs: Any) -> Tuple[bool, Union[str, List[Tuple[bool, str]]]]

      Calls Writable::write() to serialize the Wriable `file` to temporary file(s),
      then "sends" the temporary file(s) to `dest` according to the type of Writer.
      If `dest` is None, it uses the Writer's default destination.

      kwargs:
          zip: bool       Create a ZipFile containing the Writable's file(s) if the Writer supports it
          zip_name: str   Name of the ZipFile, will be auto-generated if None


   .. py:method:: option(**kwargs: Any) -> whylogs.api.writer.Writer

      file_name: str   Filename to write to
      file_dir: str    Directory to write to
      end_run: bool    End MLFlow run (only if it was created by the write() call)


   .. py:method:: check_interval(interval_seconds: int) -> None

      Validate an interval configuration for a given writer.

      Some writers only accepts certain interval configuration. Raise BadConfigError for
      an unacceptable interval.



