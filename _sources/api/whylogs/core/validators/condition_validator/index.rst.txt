:py:mod:`whylogs.core.validators.condition_validator`
=====================================================

.. py:module:: whylogs.core.validators.condition_validator


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   whylogs.core.validators.condition_validator.ConditionValidator




Attributes
~~~~~~~~~~

.. autoapisummary::

   whylogs.core.validators.condition_validator.logger


.. py:data:: logger

   

.. py:class:: ConditionValidator

   Bases: :py:obj:`whylogs.core.validators.validator.Validator`

   A validator that checks if a column satisfies a condition.

   :param name: The name of the ConditionValidator.
   :type name: str
   :param conditions: A dictionary of conditions to check.
   :type conditions: Dict[str, Union[Condition, Callable[[Any], bool]]]
   :param actions: A list of actions to take when a condition fails. The action arguments represent, respectively:
                   condition validator name, condition name, invalid value, row identity value (if any).
   :type actions: List[Union[Callable[[str, str, Any], None], Callable[[str, str, Any, Optional[Any]], None]]]
   :param enable_sampling: Whether to enable sampling of failed values. Defaults to True.
   :type enable_sampling: bool

   .. py:attribute:: total
      :type: int
      :value: 0

      

   .. py:attribute:: failures
      :type: Dict[str, int]

      

   .. py:attribute:: enable_sampling
      :type: bool
      :value: True

      

   .. py:attribute:: sample_size
      :type: int
      :value: 10

      

   .. py:attribute:: name
      :type: str

      

   .. py:attribute:: conditions
      :type: Dict[str, Union[whylogs.core.metrics.condition_count_metric.Condition, Callable[[Any], bool]]]

      

   .. py:attribute:: actions
      :type: List[Union[Callable[[str, str, Any], None], Callable[[str, str, Any, Optional[Any]], None]]]

      

   .. py:method:: columnar_validate(data: Any, identity_values: Optional[Any] = None) -> None


   .. py:method:: get_samples() -> List[Any]

      Returns a list of samples of failed values.
      The number of samples is determined by the validator's sampling size, defined through the MetricConfig.
      If `identity_column` is set, the samples will be the identity values of the failed values. Otherwise, the samples will contain
      the failed values themselves.


   .. py:method:: to_summary_dict() -> Dict[str, Any]



